Date: Wed, 12 Jun 2024 00:41:52 -0700 (PDT)
Message-ID: <1083624006.87.1718178112812@vswcrpcnfap02.crp.allegiantair.com>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_86_983822513.1718178112812"

------=_Part_86_983822513.1718178112812
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Java Keystores</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>Java Keystores</h1>
    <div class=3D"Section1">
        <h1 id=3D"JavaKeystores-VideoOverview:">Video Overview:</h1>
<p><img height=3D"250" style=3D"margin: 2px; border: 1px solid #ddd; box-si=
zing: border-box; vertical-align: text-bottom;" src=3D"848b1c22a89b14550dea=
c9b4de77e86f" width=3D"250"></p>
<p><br></p>
<p>The following procedure applies to Tomcat and Jboss:</p>
<p><span style=3D"color: rgb(255,102,0);">Please NOTE:&nbsp;</span></p>
<ul>
<li><span style=3D"color: rgb(255,102,0);">for Jboss Domain (legacy) you ne=
ed to use a 'keytool' command on one of the old jboss domain nodes, otherwi=
se the cert format is not recognized on these old hosts.</span></li>
<li><span style=3D"color: rgb(255,102,0);">for Tomcat keystore same applies=
.</span></li>
<li><span style=3D"color: rgb(255,102,0);">for Jboss Standalone and Springb=
oot you can compile the keystore on your workstation or rather on a Jboss S=
tandalone node.</span></li>
<li><span style=3D"color: rgb(255,102,0);">I'm&nbsp; not exactly sure why t=
hat is, seems to me it's a version of keytool matter, but not sure, couldn'=
t spare time to find out why.</span></li>
</ul>
<p><br></p>
<p>Request the Certificate and Key from an InfoSec or Universal resource. Y=
ou will need to request they download the file in a PEM OpenSSL format, wit=
h separate key and cert files:<br><span class=3D"confluence-embedded-file-w=
rapper"><img class=3D"confluence-embedded-image" src=3D"/download/attachmen=
ts/159876154/image2022-4-25_18-33-2.png?version=3D1&amp;modificationDate=3D=
1650936783125&amp;api=3Dv2" data-image-src=3D"/download/attachments/1598761=
54/image2022-4-25_18-33-2.png?version=3D1&amp;modificationDate=3D1650936783=
125&amp;api=3Dv2" data-unresolved-comment-count=3D"0" data-linked-resource-=
id=3D"321980808" data-linked-resource-version=3D"1" data-linked-resource-ty=
pe=3D"attachment" data-linked-resource-default-alias=3D"image2022-4-25_18-3=
3-2.png" data-base-url=3D"https://confluence.allegiantair.com" data-linked-=
resource-content-type=3D"image/png" data-linked-resource-container-id=3D"15=
9876154" data-linked-resource-container-version=3D"20"></span></p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">NOTE:</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span style=3D"color: rgb(0,0,0);">If you receive a key/cert from Venify=
, you will need to decrypt it before use:</span></p>
<p><span style=3D"color: rgb(0,0,0);">Use the following command and the sup=
plied password (given to you when the certificate was given) to decrypt the=
 files:</span></p>
<p><span style=3D"color: rgb(0,0,0);">###</span></p>
<p><span style=3D"color: rgb(0,0,0);">openssl rsa -in &lt;original encrypte=
d file name&gt; -out &lt;name of new file for decrypted file&gt;</span></p>
<p><span style=3D"color: rgb(0,0,0);">###</span></p>
<p><span style=3D"color: rgb(0,0,0);">e.g.:</span></p>
<p><span style=3D"color: rgb(0,0,0);">openssl rsa -in qa1_wildcard_cert_202=
2_Key.key_encr -out qa1_wildcard_cert_2022_Key.key</span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">You will then be prompted for=
 the encryption key. Input this, and your decrypted file should be generate=
d and can be used in the following steps</span></strong></p>
</div>
</div>
<p><br></p>
<p><br></p>
<p><span style=3D"color: rgb(0,0,0);">To properly create a keystore from sc=
ratch</span></p>
<p><br>First make a copy of the cert using the setalias command which will =
force the friendlyName attribute<br><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">openssl=
 x509 -in _.allegiantair.com.crt -setalias "g4_wildcardcert" -out _.allegia=
ntair.com.alias.crt</pre>=20
</div>
</div>
<p><br>Next, convert the PEM format to pkcs12, which bundles everything tog=
ether (provide password: changeit).<br><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">openssl=
 pkcs12 -export -out _.allegiantair.com.pk12 -name g4_wildcardcert -caname =
g4_wildcardcert -inkey _.allegiantair.com.key -in _.allegiantair.com.alias.=
crt -certfile gd_bundle-g2-g1.crt</pre>=20
</div>
</div>
<p><br>Then, you must convert the pkcs bundle to a Java Keystore<br><br></p=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">keytool=
 -importkeystore -deststorepass changeit -destkeypass changeit -destkeystor=
e jboss.keystore.wcz -srckeystore _.allegiantair.com.pk12 -srcstoretype pkc=
s12 -srcstorepass XXXXXXXXXX -alias g4_wildcardcert -noprompt</pre>=20
</div>
</div>
<p><br><br>You can verify the single entry with the alias of g4_wildcardcer=
t<br><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">keytool=
 -list -keystore [keystore name]</pre>=20
</div>
</div>
<p><br><br>You can then verify the entirety of the new keystore<br><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">keytool=
 -list -keystore [keystore name] -v</pre>=20
</div>
</div>
<p><br><br>It should show the private key, host cert, and CA cert<br><br>Pa=
sswords mentioned in the commands can be derived from the java_keystore aut=
omation in SS&amp;M. Unless overridden, the default is changeit.&nbsp; This=
 process can probably be done without them but I maintained the existing pa=
sswords in case JBoss and Tomcat have the passwords configured in their XML=
 files.<br><br>Once complete and verified, the keystore can be added to aut=
omation with the prior mentioned steps:<br><br>&nbsp;&nbsp;&nbsp; Base64 en=
code the file:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">openssl=
 enc -base64 &lt;[filename of the keystore]&gt;[new filename]</pre>=20
</div>
</div>
<p><br>&nbsp;&nbsp;&nbsp; Add the variable you want the contents assigned t=
o the top of the newly encoded file, usually:<br><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence"> ---
    variable_name: |
    encoded lines are here....</pre>=20
</div>
</div>
<p><br><br>&nbsp;&nbsp;&nbsp; You MUST add 2 spaces before each of the enco=
ded lines or ansible will not read the file into the variable<br><br>You ca=
n then vault the file with ansible.</p>
<h2 id=3D"JavaKeystores-JBossKeystores"><strong>JBoss Keystores</strong></h=
2>
<p><span style=3D"color: rgb(0,0,0);">Jboss domain keystores are located at=
 <strong>/etc/jbossas/domain/jboss.keystore.</strong></span></p>
<p><span style=3D"color: rgb(0,0,0);">This keystore is required for the HCs=
 to be able to connect to the DC.</span></p>
<p><span style=3D"color: rgb(0,0,0);">Once you have created the above keyst=
ore, you can drop this file into the above location <strong><span style=3D"=
color: rgb(255,0,0);">(name must remain jboss.keystore).</span></strong></s=
pan></p>
<h2 id=3D"JavaKeystores-SpringbootKeystores"><strong>Springboot Keystores</=
strong></h2>
<p><span style=3D"color: rgb(0,0,0);">Springboot Keystores use the same key=
store as jboss. On the springboot hosts, this file is located at <strong>/e=
tc/pki/java/springboot.keystore.&nbsp;</strong></span></p>
<p><span style=3D"color: rgb(0,0,0);">This keystore is used for the springb=
oot microservices to contact one another directly.</span></p>
<p><span style=3D"color: rgb(0,0,0);">The jboss.keystore file for a given e=
nvironment can be dropped into this location on a given springboot server<s=
pan style=3D"color: rgb(255,0,0);"> <strong>(name must remain springboot.ke=
ystore)</strong></span>.<strong> </strong>Afterwards, any springboot servic=
es would need to be restarted for the updated keystore to take effect.</spa=
n></p>
<h2 id=3D"JavaKeystores-FlydeskKeystores"><strong><span style=3D"color: rgb=
(0,0,0);">Flydesk Keystores</span></strong></h2>
<p><strong><span style=3D"color: rgb(0,0,0);">IMFWS</span></strong><span st=
yle=3D"color: rgb(0,0,0);"> Flydesk keystores are located</span><strong><sp=
an style=3D"color: rgb(0,0,0);"> </span></strong><span style=3D"color: rgb(=
0,0,0);">at</span><strong><span style=3D"color: rgb(0,0,0);"> /usr/share/ja=
va/tomcat</span></strong></p>
<p><span style=3D"color: rgb(0,0,0);">The keystore file for a given environ=
ment can be dropped into this location on a given server<span style=3D"colo=
r: rgb(255,0,0);"> <strong>(name must remain keystore)</strong></span>.<str=
ong> </strong>Afterwards, Flydesk (service name: flydesk.target) service wo=
uld need to be restarted for the updated keystore to take effect.</span></p=
>
<h2 id=3D"JavaKeystores-INFlightKeystores"><strong><span style=3D"color: rg=
b(0,0,0);">INFlight Keystores</span></strong></h2>
<p><strong>IMFWS (InFlight Flydesk)</strong>&nbsp;keystores are located at =
<strong>/usr/share/java/tomcat7</strong></p>
<p><span style=3D"color: rgb(0,0,0);">The keystore file for a given environ=
ment can be dropped into this location on a given server<span style=3D"colo=
r: rgb(255,0,0);"> <strong>(name must remain keystore)</strong></span>. Aft=
erwards, it is easier to just<strong> restart the host </strong>so Tomcat a=
nd the 4 Flydesk services (admin, discovery, edge, and gatekeeper) will sta=
rt up in the correct order.</span></p>
<p><span style=3D"color: rgb(0,0,0);"><strong>IMOWS (InFlight mobile)</stro=
ng> does not appear to have a keystore.</span></p>
<h2 id=3D"JavaKeystores-JenkinsKeystores"><strong>Jenkins Keystores</strong=
></h2>
<p>Jenkins keystores are stored in /var/lib/jenkins/.keystore and have slig=
htly different requirements.&nbsp; There are two entries with two aliases i=
n this keystore: "1" and "internal_ca".&nbsp; The "1" alias is reserved for=
 the certificate and the "internal_ca" for the CA bundle cert.</p>
<p>Assign the "1" alias to the cert:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">openssl=
 x509 -in _.trn.allegiantair.com -setalias "1" -out _.trn.allegiantair.com.=
alias.crt</pre>=20
</div>
</div>
<p><br></p>
<p>After gathering the certificate, CA bundle, and private key, bundle them=
 all together:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">openssl=
 pkcs12 -export -out _.trn.allegiantair.com.pk12 -name 1 -caname internal_c=
a -inkey _.trn.allegiantair.com.key -in _.trn.allegiantair.com.alias.crt -c=
ertfile gd_bundle-g2-g1.crt</pre>=20
</div>
</div>
<p><br></p>
<p>Now, create the keystore from the pkcs12 bundle (note: the password used=
 will be the same for all fields and can be found in the "ps -ef | grep jen=
kins" output on the host):</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">keytool=
 -importkeystore -srckeystore &lt;path-to-bundle-file.pk12&gt; -srcstoretyp=
e pkcs12 -destkeystore jenkins.example.com.jks -deststoretype JKS</pre>=20
</div>
</div>
<p><br></p>
<p>Finally, add the second entry for the "internal_ca" alias:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">keytool=
 -import -alias internal_ca -file gd_bundle-g2-g1.crt -keystore jboss.keyst=
ore.trn.jenkins</pre>=20
</div>
</div>
<p><br></p>
<p><br></p>
    </div>
</body>
</html>
------=_Part_86_983822513.1718178112812
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/848b1c22a89b14550deac9b4de77e86f

iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAMAAAC/MqoPAAADAFBMVEX19fXv7+98fHx1dXV9fX23
t7eenp5wcHDn5+f09PTz8/Pd3d2SkpLY2Njt7e3Q0NCioqJycnKqqqq7u7uurq6CgoKGhobOzs7D
w8PR0dGNjY3Hx8fj4+PGxsbS0tKoqKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABYhwFnAAAFfUlEQVR4Xu3cDVfaSBQG4EtCmPCRKKJCFe30//+octruWctZj9Uq
igjZuZNMPgZ0Cx4SWd6nkkwmd4a5EuDUTEIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACwA2p2xXb4i4Vr171i7jhPdt0O8+ueb9e9xvecP47dAQ3PrnmL17BrtsKxK7bi
j492zV3YNTtM2BVvWzN8Q+W86h/SHqe+1ptwY/W5XRMOGlPn+CSa2jvYcvg2VJR6MHEfnyOa3wer
cl8K32H251ZffIoLn0RQ3KPZ4bvMyiWsX5rigRvm98TKSb2Sj7nu4TdTvD3o5veUqW5XlGHymJWn
lYygPNYR7Ob+0xTyB621//97wDfrUbZxV9mrXkXqHwRS30dIfR9Vlno5X2BvqSz16iH1fYTU9xFS
30dIfR8h9eq0Wi27qiSVpM7JzpIzya43oWYl2VeR+uOtr17sw3gjWBBFt8WAclSROrUOaHJ4MyD+
i/z1hOigkle9khNPkfNEdy237RzfBJFK3XssnlEv58RTJal3frdm9EyB++D8nhG1H1vFM2/lpF4O
++8SFyI3XcZ3zrMNzQ7fZUu59OptUwxEL7+HLYXvsOVcLpzDvt9s+v3Duv2arwrfXStyCb1OXXTr
HW/FzL0V4TtrzVzWDN9QJd/rHwNS37L5WlM//XK+1stJ3VkrmXlJg7IrtsKJ1pkeXFLqK75atmF/
J4UDAAAAAAAAAAAAwDqkXbGCtNZbJt/1TMlf+2VyclPIdE+OtCveIO0KklIKcbbiqt1la4RuLDA5
pic6LtLFK0Z2xQoju0IbjZ7713924niN0NjIrvgvtefjpGRSD8a8HOuZTD0hRIfncyUFya+GPrq4
Qt815rOIxLHULds8UtVNUww5Usfqlrnby0TfTu7UKugK0bXPQOW6YklocRA8Wo77rNbySERER9yK
t14ZFcnPqvb8WC3aaoPXccon0V9xgCFb4pIvpG9JonNxHgaikStIHaJ+xCAcui4P5yK8MAeOatmW
Q+qLOEbHmsCkIdGQf0HiohaensS1RqErvdKh6XP3RC+87BJ5qssBT7uRnMvAtOKflaOSIgjPhF7w
Bu/hiXo90bTek5I8lydtcrXoU/z8aUHHqoU8MHt45k9PVxOdNqgRHVHnLJe6CdQb6ii7FOYy9dA6
nAtdyTQ0G0RyNx+99ngwfNm/buXJN0YlAyJfL7iNDhd8iPrJEHPXr3tzn16cGRev1OPLUy1XMHj3
DzkielCFh+ReC/Ma1byAZvm5b2kgk7xo36hHY/KJvub6Y/mustDsuV09pnjt8iXQ33mLW5kTmCtH
RS9ET3ph9nDjl1PdOk+q3E9PPF1Q79lYWpDJQq91CL+z/HhTvY5D/a+WxaSByarWFx1VEmfDVi2p
NQpdySw0HUTy2RDHmUMwbRX/0PKo9MosZNo4piOyU9n1W3MpeXo62BS+Ls1h5VlvZubbHU3ph3rE
F6UvxyrRz/qMv7Luf0xMSql8V5SFpoMwsxI4JpuhUNzKVea6yjHhI0YjXZel/jidxvdR6F4d+35P
5Ap+aOXTuVcfG/dmKxpH+qEtxcYeXvgd/BT29TeJzB7FrpgOTZ/71FEfc+r3sOA4hw8IplvZMxCy
rqS1hwqNE3Zz5er0dxTdd3OFxc2DLIRcD8a34/bfyVbviyDxJZnzuBSbOFFvXr82/dW06otdaRya
Pvf3xf30p1rPOG5wbVq11ZZ9X5cVXRnBeDpum8bvdy7smo1tuytpV7AN7xThDH81/8ndceIdKutq
w9SPftI0qj/b1Zv4mF0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOy6fwE6
9TqdDmIZxgAAAABJRU5ErkJggg==
------=_Part_86_983822513.1718178112812--
